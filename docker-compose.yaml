version: '3.8'

services:
  # Your existing Redis service
  
  
  # app
  app:
    container_name: app
    build: ./app
    command: bash -c "uvicorn main:app --host 0.0.0.0 --port 8000 --reload"
    volumes:
      - ./app:/app
    environment:
      - CASSANDRA_IP_ADDRESS=cas1
      - CASSANDRA_KEYSPACE=empregos_cv
    ports:
      - 8000:8000
    depends_on:
      - cas1
      - redis
    restart: always



  cas1:
    container_name: cas1
    image: cassandra:latest
    ports:
      - 9042:9042
    environment:
      - CASSANDRA_START_RPC=true
      - CASSANDRA_CLUSTER_NAME=observatorio
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_DC=datacenter1
    depends_on:
      - redis
  
  cas2:
    container_name: cas2
    image: cassandra:latest
    ports:
      - 9043:9042
    depends_on:
      - cas1
    environment:
      - CASSANDRA_START_RPC=true
      - CASSANDRA_CLUSTER_NAME=observatorio
      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
      - CASSANDRA_DC=datacenter1
      - CASSANDRA_SEEDS=cas1

  celery_worker:
    container_name: celery_worker
    build: ./app
    command: celery -A worker.celery_app worker --beat --loglevel=info --
    volumes:
      - ./app:/app
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - CASSANDRA_IP_ADDRESS=cas1
    depends_on:
      - app
  
  flower:
    container_name: flower
    build: ./app
    command: celery -A worker.celery_app flower --port=5555
    ports:
      - 5556:5555
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - celery_worker

  redis:
    container_name: redis
    image: redis:6.2-alpine
    ports:
      - "6379:6379"
